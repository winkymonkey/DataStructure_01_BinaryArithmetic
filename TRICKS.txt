Number of bits in Decimal Number ------ Floor(Logn)+1	= (int)(Math.log(n) / Math.log(2)) + 1

Set rightmost 0 ----------------------- (n | (n+1))
Unset rightmost 1 --------------------- (n & (n-1))

Extract rightmost bit ----------------- (n & 1)
Toggle rightmost bit ------------------ (n ^ 1)

Add 1 --------------------------------- Toggle all bits after rightmost 0 (inclusive)
Minus 1 ------------------------------- Toggle all bits after rightmost 1 (inclusive)
Multiply by 2 ------------------------- (n << 1)
Divide by 2 --------------------------- (n >> 1)



***************************************************************************************************************
Check if Even number ------------------ (n & 1) == 0
Check if Odd number ------------------- (n & 1) == 1

Check if Positive number -------------- (n >> 31)==(0)  and (-n >> 31)==(-1)
Check if Negative number -------------- (n >> 31)==(-1) and (-n >> 31)==(0)
Check if Zero number ------------------ (n >> 31)==(0)  and (-n >> 31)==(0)

Check if All Bits Set ----------------- (n & (n+1)) == 0



***************************************************************************************************************
	TODO
https://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/
https://www.geeksforgeeks.org/a-boolean-array-puzzle/
https://www.geeksforgeeks.org/program-to-count-number-of-set-bits-in-an-big-array/
https://www.geeksforgeeks.org/xor-encryption-shifting-plaintext/
Minimum digits to remove to make a number Perfect Square

https://www.exploringbinary.com/number-of-bits-in-a-decimal-integer/
